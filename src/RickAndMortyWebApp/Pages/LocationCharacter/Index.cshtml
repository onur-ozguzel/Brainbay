@page
@model RickAndMortyWebApp.Pages.LocationCharacter.IndexModel
@{
}

<h2>Alive Characters from @Model.LocationName</h2>

@if (Model.PaginatedResults != null && Model.PaginatedResults.Data.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.PaginatedResults!.Data[0].Name)</th>
                <th>@Html.DisplayNameFor(model => model.PaginatedResults!.Data[0].Species)</th>
                <th>@Html.DisplayNameFor(model => model.PaginatedResults!.Data[0].Gender)</th>
                <th>@Html.DisplayNameFor(model => model.PaginatedResults!.Data[0].OriginName)</th>
                <th>@Html.DisplayNameFor(model => model.PaginatedResults!.Data[0].Image)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var character in Model.PaginatedResults.Data)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => character.Name)</td>
                    <td>@Html.DisplayFor(modelItem => @character.Species)</td>
                    <td>@Html.DisplayFor(modelItem => @character.Gender)</td>
                    <td>@Html.DisplayFor(modelItem => @character.OriginName)</td>
                    <td><img src="@character.Image" alt="@character.Name" style="width:100px;" /></td>
                    <td>
                        <a asp-page="/Characters/Details" asp-route-id="@character.Id">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <ul class="pagination">
        <!-- Previous Button -->
        <li class="page-item @(Model.PaginatedResults.PageIndex == 1 ? "disabled" : "")">
            <a class="page-link" href="?currentPage=@(Model.PaginatedResults.PageIndex - 1)&pageSize=@Model.PaginatedResults.PageSize&locationName=@Model.LocationName">Previous</a>
        </li>

        <!-- First Page -->
        <li class="page-item @(Model.PaginatedResults.PageIndex == 1 ? "active" : "")">
            <a class="page-link" href="?currentPage=1&pageSize=@Model.PaginatedResults.PageSize&locationName=@Model.LocationName">1</a>
        </li>

        @if (Model.PaginatedResults.PageIndex > 4)
        {
            <li class="page-item disabled"><a class="page-link">...</a></li>
        }

        <!-- Pages Near Current Page -->
        @for (int i = Model.PaginatedResults.PageIndex - 3; i <= Model.PaginatedResults.PageIndex + 3; i++)
        {
            if (i > 1 && i < Model.PaginatedResults.TotalPages)
            {
                <li class="page-item @(i == Model.PaginatedResults.PageIndex ? "active" : "")">
                    <a class="page-link" href="?currentPage=@i&pageSize=@Model.PaginatedResults.PageSize&locationName=@Model.LocationName">@i</a>
                </li>
            }
        }

        @if (Model.PaginatedResults.PageIndex < Model.PaginatedResults.TotalPages - 3)
        {
            <li class="page-item disabled"><a class="page-link">...</a></li>
        }

        <!-- Last Page -->
        @if (Model.PaginatedResults.TotalPages > 1)
        {
            <li class="page-item @(Model.PaginatedResults.PageIndex == Model.PaginatedResults.TotalPages ? "active" : "")">
                <a class="page-link" href="?currentPage=@Model.PaginatedResults.TotalPages&pageSize=@Model.PaginatedResults.PageSize&locationName=@Model.LocationName">@Model.PaginatedResults.TotalPages</a>
            </li>
        }

        <!-- Next Button -->
        <li class="page-item @(Model.PaginatedResults.PageIndex >= Model.PaginatedResults.TotalPages ? "disabled" : "")">
            <a class="page-link" href="?currentPage=@(Model.PaginatedResults.PageIndex + 1)&pageSize=@Model.PaginatedResults.PageSize&locationName=@Model.LocationName">Next</a>
        </li>
    </ul>
}
else
{
    <p>No characters found for this location.</p>
}